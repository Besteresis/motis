// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { ReverseGeocodeData, ReverseGeocodeError, ReverseGeocodeResponse, GeocodeData, GeocodeError, GeocodeResponse, PlanData, PlanError, PlanResponse, FootpathsData, FootpathsError, FootpathsResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Translate coordinates to the closest address(es)/places/stops.
 */
export const reverseGeocode = <ThrowOnError extends boolean = false>(options: Options<ReverseGeocodeData, ThrowOnError>) => { return (options?.client ?? client).get<ReverseGeocodeResponse, ReverseGeocodeError, ThrowOnError>({
    ...options,
    url: '/api/v1/reverse-geocode'
}); };

/**
 * Autocompletion & geocoding that resolves user input addresses including coordinates
 */
export const geocode = <ThrowOnError extends boolean = false>(options: Options<GeocodeData, ThrowOnError>) => { return (options?.client ?? client).get<GeocodeResponse, GeocodeError, ThrowOnError>({
    ...options,
    url: '/api/v1/geocode'
}); };

/**
 * Computes optimal connections from one place to another.
 */
export const plan = <ThrowOnError extends boolean = false>(options: Options<PlanData, ThrowOnError>) => { return (options?.client ?? client).get<PlanResponse, PlanError, ThrowOnError>({
    ...options,
    url: '/api/v1/plan'
}); };

/**
 * Prints all footpaths of a timetable location (track, bus stop, etc.)
 */
export const footpaths = <ThrowOnError extends boolean = false>(options: Options<FootpathsData, ThrowOnError>) => { return (options?.client ?? client).get<FootpathsResponse, FootpathsError, ThrowOnError>({
    ...options,
    url: '/api/debug/footpaths'
}); };